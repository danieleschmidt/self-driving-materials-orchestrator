# Multi-stage production Dockerfile for Materials Orchestrator
# Supports multi-architecture builds for global deployment

ARG PYTHON_VERSION=3.11
ARG DEBIAN_VERSION=bullseye

# Build stage
FROM python:${PYTHON_VERSION}-slim-${DEBIAN_VERSION} as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libc6-dev \
    libffi-dev \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /build

# Copy requirements and install Python dependencies
COPY requirements-prod.txt requirements-dev.txt pyproject.toml ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-prod.txt

# Copy source code
COPY src/ src/
COPY README.md LICENSE ./

# Install the package
RUN pip install --no-cache-dir -e .

# Production stage
FROM python:${PYTHON_VERSION}-slim-${DEBIAN_VERSION} as production

# Create non-root user
RUN groupadd -r materials && useradd -r -g materials materials

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    jq \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set work directory
WORKDIR /app

# Copy from builder stage
COPY --from=builder /usr/local/lib/python*/site-packages/ /usr/local/lib/python*/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/
COPY --from=builder /build/src/ ./src/

# Copy configuration and deployment files
COPY deployment/config/ ./config/
COPY deployment/scripts/ ./scripts/
COPY deployment/health/ ./health/

# Create directories for data and logs
RUN mkdir -p /app/data /app/logs /app/cache && \
    chown -R materials:materials /app

# Environment variables
ENV PYTHONPATH=/app/src \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    MATERIALS_ORCHESTRATOR_ENV=production \
    MATERIALS_ORCHESTRATOR_CONFIG=/app/config/production.yaml \
    MATERIALS_ORCHESTRATOR_LOG_LEVEL=INFO \
    MATERIALS_ORCHESTRATOR_DATA_DIR=/app/data \
    MATERIALS_ORCHESTRATOR_CACHE_DIR=/app/cache

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 health/healthcheck.py

# Switch to non-root user
USER materials

# Expose ports
EXPOSE 8000 8501 9090

# Default command
CMD ["python3", "-m", "materials_orchestrator.cli", "launch", "--port", "8000"]

# Labels for metadata
LABEL maintainer="daniel@terragonlabs.com" \
      version="1.0.0" \
      description="Self-Driving Materials Discovery Orchestrator" \
      org.opencontainers.image.title="Materials Orchestrator" \
      org.opencontainers.image.description="Autonomous materials discovery platform" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.vendor="Terragon Labs" \
      org.opencontainers.image.licenses="MIT"