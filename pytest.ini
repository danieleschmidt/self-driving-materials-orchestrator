[tool:pytest]
# Pytest configuration for materials orchestrator testing

# Test discovery
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src/materials_orchestrator
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --durations=10

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    robot: marks tests that require robot hardware
    instrument: marks tests that require analytical instruments
    database: marks tests that require database connection
    e2e: marks tests as end-to-end tests
    benchmark: marks tests as performance benchmarks
    simulation: marks tests that use simulation mode
    unit: marks tests as unit tests (default)
    
# Fixtures
usefixtures = 
    
# Coverage configuration
[coverage:run]
source = src/materials_orchestrator
omit = 
    */tests/*
    */test_*
    */conftest.py
    */__init__.py
    */migrations/*
    */venv/*
    */virtualenvs/*
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml